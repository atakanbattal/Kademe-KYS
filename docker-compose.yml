version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: kys-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
      MONGO_INITDB_DATABASE: kys
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d
    networks:
      - kys-network

  # Backend API
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: kys-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5003
      MONGODB_URI: mongodb://admin:adminpassword@mongodb:27017/kys?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-here-change-in-production
      FRONTEND_URL: http://localhost:3005
    ports:
      - "5003:5003"
    depends_on:
      - mongodb
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - kys-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (Nginx)
  frontend:
    image: nginx:alpine
    container_name: kys-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./dist:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - kys-network

  # Redis (Optional - for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: kys-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kys-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  kys-network:
    driver: bridge 